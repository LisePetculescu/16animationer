/* .animation {
    background-color: blue;
} */

/* Animation 1: Falling
   Bolden falder konstant fra oven. */
.falling {
  animation-name: falling;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes falling {
  0% {
    transform: translate(0, -300%);
  }

  100% {
    transform: translate(0, 300%);
  }
}

/* Animation 2: Bouncing:
Bolden starter fra oven, rammer jorden, 
og hopper op igen. I en uendelighed.
Få det til at se så naturligt ud som muligt,
ved at vælge den rigtige timingfunktion! */
.bouncing {
  animation-name: bouncing;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;
  /* animation-timing-function: cubic-bezier(0.57, -0.08, 0.64, 1.91); */
  animation-iteration-count: infinite;
}

@keyframes bouncing {
  0% {
    transform: translate(0, -130%);
  }
  50% {
    transform: translate(0, 140%);
  }
  100% {
    transform: translate(0, -130%);
  }
}

/* animation 3: Drop:
Find den rigtige timingfunktion, 
og sørg for at animationen kun kører én gang, 
men bolden bliver liggende. */
.drop {
  animation-name: drop;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes drop {
  0% {
    transform: translate(0, -300%);
  }

  100% {
    transform: translate(0, 150%);
  }
}

/* animation 4: pattern:
Her skal du bruge flere keyframes 
for at flytte bolden fra sted til sted til sted. 
Sørg for at bolden rammer cirka midt 
på boksens sider. Det kan godt vise sig lidt 
umuligt at få en naturlig bevægelse. */
.pattern {
  animation-name: pattern;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes pattern {
  0% {
    transform: translate(0%, -150%);
  }
  25% {
    transform: translate(150%, 0%);
  }
  50% {
    transform: translate(0%, 150%);
  }
  75% {
    transform: translate(-150%, 0%);
  }
  100% {
    transform: translate(0, -150%);
  }
}

/* animation 5: zoom out:
Prøv også om du kan få bolden til 
at forblive helt lille, så der ikke loopes. */
.zoom_out {
  animation-name: zoom_out;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes zoom_out {
  0% {
    transform: translate(0, 0%);
  }
  100% {
    transform: translate(0, 0%) scale(0.1);
  }
}

/* animation 6: zoom in:
Prøv også om du kan få den til at forblive stor, 
så der ikke loopes. Undersøg hvad der skal til 
for at den ikke pixelerer. 
Prøv evt forskellige browsere! */
.zoom_in {
  animation-name: zoom_in;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes zoom_in {
  0% {
    transform: translate(0, 0%);
  }
  100% {
    transform: translate(0, 0%) scale(10);
  }
}

/* animation 7: fade out
Bolden fader langsomt ud, og forsvinder helt. 
Sørg for at den forbliver skjult.
Denne, og den næste, animation virker kun lige 
når browseren loader, så reload for at teste! */
.fade_out {
  animation-name: fade_out;
  animation-timing-function: linear;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes fade_out {
  0% {
    transform: translate(0, 0%);
    opacity: 1;
  }

  100% {
    transform: translate(0, 0%);
    opacity: 0;
  }
}

/* animation 8: fade in
Bolden fader langsomt ind, og forbliver på skærmen 
resten af tiden. animation virker kun lige 
når browseren loader, så reload for at teste! */
.fade_in {
  animation-name: fade_in;
  animation-timing-function: linear;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes fade_in {
  0% {
    transform: translate(0, 0%);
    opacity: 0;
  }

  100% {
    transform: translate(0, 0%);
    opacity: 1;
  }
}

/* animation 9: rotation:
Bolden drejer rundt om sig selv i en evighed.
 Sørg for at den drejer jævnt rundt, 
 og ikke speeder op og ned. */
.rotation {
  animation-name: rotation;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  /* unødvendigt i dette tilfælde: transform-origin: center; */
}

@keyframes rotation {
  0% {
    transform: translate(0, 0%);
  }
  /* hvis rotate er i 0%/from roterer den
    counterclockwise, og når den er i 100%/to roterer den
    clockwise */
  100% {
    transform: translate(0, 0%) rotate(360deg);
  }
}

/* animation 10: rotation ii
Bolden drejer nu rundt om et punkt (langt) 
uden for sig selv. Du skal kigge på hvordan
 du ændrer centrum for en transform. */

.rotation2 {
  animation-name: rotation2;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  transform-origin: center;
}

@keyframes rotation2 {
  0% {
    transform: rotate(0deg) translate(140%);
  }
  100% {
    transform: rotate(360deg) translate(140%);
  }
}
